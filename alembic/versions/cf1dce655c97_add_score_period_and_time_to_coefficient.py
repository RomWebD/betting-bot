"""Add score, period, and time to Coefficient

Revision ID: cf1dce655c97
Revises: 0351f7374a1d
Create Date: 2025-02-25 14:01:40.971298

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cf1dce655c97'
down_revision: Union[str, None] = '0351f7374a1d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('coefficients', sa.Column('score1', sa.Integer(), nullable=True))
    op.add_column('coefficients', sa.Column('score2', sa.Integer(), nullable=True))
    op.add_column('coefficients', sa.Column('period', sa.String(), nullable=True))
    op.add_column('coefficients', sa.Column('time', sa.String(), nullable=True))
    op.drop_column('coefficients', 'timestamp')
    op.add_column('matches', sa.Column('status', sa.String(), nullable=True))
    op.drop_column('matches', 'period')
    op.drop_column('matches', 'timestamp')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('matches', sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('matches', sa.Column('period', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('matches', 'status')
    op.add_column('coefficients', sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_column('coefficients', 'time')
    op.drop_column('coefficients', 'period')
    op.drop_column('coefficients', 'score2')
    op.drop_column('coefficients', 'score1')
    # ### end Alembic commands ###
